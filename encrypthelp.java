package encryption;
import java.io.*;
import java.util.*;
public class encrypthelp
{
	public String hexbin(String h)
	{
		String ans="";
		for(int i=0;i<h.length();i++)
		{
			if(h.charAt(i)=='A')
				ans+="1010";
			else if(h.charAt(i)=='B')
				ans+="1011";
			else if(h.charAt(i)=='C')
				ans+="1100";
			else if(h.charAt(i)=='D')
				ans+="1101";
			else if(h.charAt(i)=='E')
				ans+="1110";
			else if(h.charAt(i)=='F')
				ans+="1111";
			else if(h.charAt(i)=='0')
				ans+="0000";
			else if(h.charAt(i)=='1')
				ans+="0001";
			else if(h.charAt(i)=='2')
				ans+="0010";
			else if(h.charAt(i)=='3')
				ans+="0011";
			else if(h.charAt(i)=='4')
				ans+="0100";
			else if(h.charAt(i)=='5')
				ans+="0101";
			else if(h.charAt(i)=='6')
				ans+="0110";
			else if(h.charAt(i)=='7')
				ans+="0111";
			else if(h.charAt(i)=='8')
				ans+="1000";
			else if(h.charAt(i)=='9')
				ans+="1001";
		}
		return ans;
	}
	public String binhex(String b)
	{
		String ans="";
		//System.out.println(b);
		for(int i=0;i<b.length();i=i+4)
		{
			int t=i+4;
			String temp=b.substring(i,t);
			//System.out.println(temp);
			if(temp.equals("0001"))
				ans+="1";
			else if(temp.equals("0010"))
				ans+="2";
			else if(temp.equals("0011"))
				ans+="3";
			else if(temp.equals("0100"))
				ans+="4";
			else if(temp.equals("0101"))
				ans+="5";
			else if(temp.equals("0110"))
				ans+="6";
			else if(temp.equals("0111"))
				ans+="7";
			else if(temp.equals("1000"))
				ans+="8";
			else if(temp.equals("1001"))
				ans+="9";
			else if(temp.equals("1010"))
				ans+="A";
			else if(temp.equals("1011"))
				ans+="B";
			else if(temp.equals("1100"))
				ans+="C";
			else if(temp.equals("1101"))
				ans+="D";
			else if(temp.equals("1110"))
				ans+="E";
			else if(temp.equals("1111"))
				ans+="F";
			else if(temp.equals("0000"))
				ans+="0";
		}
		return ans;
	}
	public String initperm(String in)
	{
		String ans="";
		ans+=in.charAt(57);
		ans+=in.charAt(49);
		ans+=in.charAt(41);
		ans+=in.charAt(33);
		ans+=in.charAt(25);
		ans+=in.charAt(17);
		ans+=in.charAt(9);
		ans+=in.charAt(1);
		ans+=in.charAt(59);
		ans+=in.charAt(51);
		ans+=in.charAt(43);
		ans+=in.charAt(35);
		ans+=in.charAt(27);
		ans+=in.charAt(19);
		ans+=in.charAt(11);
		ans+=in.charAt(3);
		ans+=in.charAt(61);
		ans+=in.charAt(53);
		ans+=in.charAt(45);
		ans+=in.charAt(37);
		ans+=in.charAt(29);
		ans+=in.charAt(21);
		ans+=in.charAt(13);
		ans+=in.charAt(5);
		ans+=in.charAt(63);
		ans+=in.charAt(55);
		ans+=in.charAt(47);
		ans+=in.charAt(39);
		ans+=in.charAt(31);
		ans+=in.charAt(23);
		ans+=in.charAt(15);
		ans+=in.charAt(7);
		ans+=in.charAt(56);
		ans+=in.charAt(48);
		ans+=in.charAt(40);
		ans+=in.charAt(32);
		ans+=in.charAt(24);
		ans+=in.charAt(16);
		ans+=in.charAt(8);
		ans+=in.charAt(0);
		ans+=in.charAt(58);
		ans+=in.charAt(50);
		ans+=in.charAt(42);
		ans+=in.charAt(34);
		ans+=in.charAt(26);
		ans+=in.charAt(18);
		ans+=in.charAt(10);
		ans+=in.charAt(2);
		ans+=in.charAt(60);
		ans+=in.charAt(52);
		ans+=in.charAt(44);
		ans+=in.charAt(36);
		ans+=in.charAt(28);
		ans+=in.charAt(20);
		ans+=in.charAt(12);
		ans+=in.charAt(4);
		ans+=in.charAt(62);
		ans+=in.charAt(54);
		ans+=in.charAt(46);
		ans+=in.charAt(38);
		ans+=in.charAt(30);
		ans+=in.charAt(22);
		ans+=in.charAt(14);
		ans+=in.charAt(6);
		
		return ans;
	}
	public String finalperm(String p)
	{
		String ans="";
		int i=39,j=7,k=47,l=15,m=55,n=23,o=63,q=31;
		for(int a=0;a<8;a++)
		{
			ans+=p.charAt(i);
			ans+=p.charAt(j);
			ans+=p.charAt(k);
			ans+=p.charAt(l);
			ans+=p.charAt(m);
			ans+=p.charAt(n);
			ans+=p.charAt(o);
			ans+=p.charAt(q);
			i-=1;
			j-=1;
			k-=1;
			l-=1;
			m-=1;
			n-=1;
			o-=1;
			q-=1;
		}
		return ans;
	}
	public String expansion(String r)
	{
		String ans="",rc=r;
		ans+=r.charAt(31);
		ans+=r.charAt(0);
		ans+=r.charAt(1);
		ans+=r.charAt(2);
		ans+=r.charAt(3);
		ans+=r.charAt(4);
		int k=3;
		for(int i=0;i<6;i++)
		{
			ans+=r.charAt(k);
			ans+=r.charAt(k+1);
			ans+=r.charAt(k+2);
			ans+=r.charAt(k+3);
			ans+=r.charAt(k+4);
			ans+=r.charAt(k+5);
			k+=4;
		}
		ans+=r.charAt(27);
		ans+=r.charAt(28);
		ans+=r.charAt(29);
		ans+=r.charAt(30);
		ans+=r.charAt(31);
		ans+=r.charAt(0);
		return ans;
	}
	public String exor(String x,String y)
	{
		String ans="";
		for(int i=0;i<x.length();i++)
		{
			if(x.charAt(i)==y.charAt(i))
				ans+="0";
			else
				ans+="1";
		}
		return ans;
	}
	public int sboxval(int i,int r,int c)
	{
		int s[][][]=new int[16][16][16];
		s[0][0][0]=14;
		s[0][0][1]=4;
		s[0][0][2]=13;
		s[0][0][3]=1;
		s[0][0][4]=2;
		s[0][0][5]=15;
		s[0][0][6]=11;
		s[0][0][7]=8;
		s[0][0][8]=3;
		s[0][0][9]=10;
		s[0][0][10]=6;
		s[0][0][11]=12;
		s[0][0][12]=5;
		s[0][0][13]=9;
		s[0][0][14]=0;
		s[0][0][15]=7;
		
		s[0][1][0]=0;
		s[0][1][1]=15;
		s[0][1][2]=7;
		s[0][1][3]=4;
		s[0][1][4]=14;
		s[0][1][5]=2;
		s[0][1][6]=13;
		s[0][1][7]=1;
		s[0][1][8]=10;
		s[0][1][9]=6;
		s[0][1][10]=12;
		s[0][1][11]=11;
		s[0][1][12]=9;
		s[0][1][13]=5;
		s[0][1][14]=3;
		s[0][1][15]=8;
		
		s[0][2][0]=4;
		s[0][2][1]=1;
		s[0][2][2]=14;
		s[0][2][3]=8;
		s[0][2][4]=13;
		s[0][2][5]=6;
		s[0][2][6]=2;
		s[0][2][7]=11;
		s[0][2][8]=15;
		s[0][2][9]=12;
		s[0][2][10]=9;
		s[0][2][11]=7;
		s[0][2][12]=3;
		s[0][2][13]=10;
		s[0][2][14]=5;
		s[0][2][15]=0;
		
		s[0][3][0]=15;
		s[0][3][1]=12;
		s[0][3][2]=8;
		s[0][3][3]=2;
		s[0][3][4]=4;
		s[0][3][5]=9;
		s[0][3][6]=1;
		s[0][3][7]=7;
		s[0][3][8]=5;
		s[0][3][9]=11;
		s[0][3][10]=3;
		s[0][3][11]=14;
		s[0][3][12]=10;
		s[0][3][13]=0;
		s[0][3][14]=6;
		s[0][3][15]=13;
		
		s[1][0][0]=15;
		s[1][0][1]=1;
		s[1][0][2]=8;
		s[1][0][3]=14;
		s[1][0][4]=6;
		s[1][0][5]=11;
		s[1][0][6]=3;
		s[1][0][7]=4;
		s[1][0][8]=9;
		s[1][0][9]=7;
		s[1][0][10]=2;
		s[1][0][11]=13;
		s[1][0][12]=12;
		s[1][0][13]=0;
		s[1][0][14]=5;
		s[1][0][15]=10;
		
		s[1][1][0]=3;
		s[1][1][1]=13;
		s[1][1][2]=4;
		s[1][1][3]=7;
		s[1][1][4]=15;
		s[1][1][5]=2;
		s[1][1][6]=8;
		s[1][1][7]=14;
		s[1][1][8]=12;
		s[1][1][9]=0;
		s[1][1][10]=1;
		s[1][1][11]=10;
		s[1][1][12]=6;
		s[1][1][13]=9;
		s[1][1][14]=11;
		s[1][1][15]=5;
		
		s[1][2][0]=0;
		s[1][2][1]=14;
		s[1][2][2]=7;
		s[1][2][3]=11;
		s[1][2][4]=10;
		s[1][2][5]=4;
		s[1][2][6]=13;
		s[1][2][7]=1;
		s[1][2][8]=5;
		s[1][2][9]=8;
		s[1][2][10]=12;
		s[1][2][11]=6;
		s[1][2][12]=9;
		s[1][2][13]=3;
		s[1][2][14]=2;
		s[1][2][15]=15;
		
		s[1][3][0]=13;
		s[1][3][1]=8;
		s[1][3][2]=10;
		s[1][3][3]=1;
		s[1][3][4]=3;
		s[1][3][5]=15;
		s[1][3][6]=4;
		s[1][3][7]=2;
		s[1][3][8]=11;
		s[1][3][9]=6;
		s[1][3][10]=7;
		s[1][3][11]=12;
		s[1][3][12]=0;
		s[1][3][13]=5;
		s[1][3][14]=14;
		s[1][3][15]=9;
		
		s[2][0][0]=10;
		s[2][0][1]=0;
		s[2][0][2]=9;
		s[2][0][3]=14;
		s[2][0][4]=6;
		s[2][0][5]=3;
		s[2][0][6]=15;
		s[2][0][7]=5;
		s[2][0][8]=1;
		s[2][0][9]=13;
		s[2][0][10]=12;
		s[2][0][11]=7;
		s[2][0][12]=11;
		s[2][0][13]=4;
		s[2][0][14]=2;
		s[2][0][15]=8;
		
		s[2][1][0]=13;
		s[2][1][1]=7;
		s[2][1][2]=0;
		s[2][1][3]=9;
		s[2][1][4]=3;
		s[2][1][5]=4;
		s[2][1][6]=6;
		s[2][1][7]=10;
		s[2][1][8]=2;
		s[2][1][9]=8;
		s[2][1][10]=5;
		s[2][1][11]=14;
		s[2][1][12]=12;
		s[2][1][13]=11;
		s[2][1][14]=15;
		s[2][1][15]=1;
		
		s[2][2][0]=13;
		s[2][2][1]=6;
		s[2][2][2]=4;
		s[2][2][3]=9;
		s[2][2][4]=8;
		s[2][2][5]=15;
		s[2][2][6]=3;
		s[2][2][7]=0;
		s[2][2][8]=11;
		s[2][2][9]=1;
		s[2][2][10]=2;
		s[2][2][11]=12;
		s[2][2][12]=5;
		s[2][2][13]=10;
		s[2][2][14]=14;
		s[2][2][15]=7;
		
		s[2][3][0]=1;
		s[2][3][1]=10;
		s[2][3][2]=13;
		s[2][3][3]=0;
		s[2][3][4]=6;
		s[2][3][5]=9;
		s[2][3][6]=8;
		s[2][3][7]=7;
		s[2][3][8]=4;
		s[2][3][9]=15;
		s[2][3][10]=14;
		s[2][3][11]=3;
		s[2][3][12]=11;
		s[2][3][13]=5;
		s[2][3][14]=2;
		s[2][3][15]=12;
		
		s[3][0][0]=7;
		s[3][0][1]=13;
		s[3][0][2]=14;
		s[3][0][3]=3;
		s[3][0][4]=0;
		s[3][0][5]=6;
		s[3][0][6]=9;
		s[3][0][7]=10;
		s[3][0][8]=1;
		s[3][0][9]=2;
		s[3][0][10]=8;
		s[3][0][11]=5;
		s[3][0][12]=11;
		s[3][0][13]=12;
		s[3][0][14]=4;
		s[3][0][15]=15;
		
		s[3][1][0]=13;
		s[3][1][1]=8;
		s[3][1][2]=11;
		s[3][1][3]=5;
		s[3][1][4]=6;
		s[3][1][5]=15;
		s[3][1][6]=0;
		s[3][1][7]=3;
		s[3][1][8]=4;
		s[3][1][9]=7;
		s[3][1][10]=2;
		s[3][1][11]=12;
		s[3][1][12]=1;
		s[3][1][13]=10;
		s[3][1][14]=14;
		s[3][1][15]=9;
		
		s[3][2][0]=10;
		s[3][2][1]=6;
		s[3][2][2]=9;
		s[3][2][3]=0;
		s[3][2][4]=12;
		s[3][2][5]=11;
		s[3][2][6]=7;
		s[3][2][7]=13;
		s[3][2][8]=15;
		s[3][2][9]=1;
		s[3][2][10]=3;
		s[3][2][11]=14;
		s[3][2][12]=5;
		s[3][2][13]=2;
		s[3][2][14]=8;
		s[3][2][15]=4;
		
		s[3][3][0]=3;
		s[3][3][1]=15;
		s[3][3][2]=0;
		s[3][3][3]=6;
		s[3][3][4]=10;
		s[3][3][5]=1;
		s[3][3][6]=13;
		s[3][3][7]=8;
		s[3][3][8]=9;
		s[3][3][9]=4;
		s[3][3][10]=5;
		s[3][3][11]=11;
		s[3][3][12]=12;
		s[3][3][13]=7;
		s[3][3][14]=2;
		s[3][3][15]=14;
		
		s[4][0][0]=2;
		s[4][0][1]=12;
		s[4][0][2]=4;
		s[4][0][3]=1;
		s[4][0][4]=7;
		s[4][0][5]=10;
		s[4][0][6]=11;
		s[4][0][7]=6;
		s[4][0][8]=8;
		s[4][0][9]=5;
		s[4][0][10]=3;
		s[4][0][11]=15;
		s[4][0][12]=13;
		s[4][0][13]=0;
		s[4][0][14]=14;
		s[4][0][15]=9;
		
		s[4][1][0]=14;
		s[4][1][1]=11;
		s[4][1][2]=2;
		s[4][1][3]=12;
		s[4][1][4]=4;
		s[4][1][5]=7;
		s[4][1][6]=13;
		s[4][1][7]=1;
		s[4][1][8]=5;
		s[4][1][9]=0;
		s[4][1][10]=15;
		s[4][1][11]=10;
		s[4][1][12]=3;
		s[4][1][13]=9;
		s[4][1][14]=8;
		s[4][1][15]=6;

		s[4][2][0]=4;
		s[4][2][1]=2;
		s[4][2][2]=1;
		s[4][2][3]=11;
		s[4][2][4]=10;
		s[4][2][5]=13;
		s[4][2][6]=7;
		s[4][2][7]=8;
		s[4][2][8]=15;
		s[4][2][9]=9;
		s[4][2][10]=12;
		s[4][2][11]=5;
		s[4][2][12]=6;
		s[4][2][13]=3;
		s[4][2][14]=0;
		s[4][2][15]=14;
		
		s[4][3][0]=11;
		s[4][3][1]=8;
		s[4][3][2]=12;
		s[4][3][3]=7;
		s[4][3][4]=1;
		s[4][3][5]=14;
		s[4][3][6]=2;
		s[4][3][7]=13;
		s[4][3][8]=6;
		s[4][3][9]=15;
		s[4][3][10]=0;
		s[4][3][11]=9;
		s[4][3][12]=10;
		s[4][3][13]=4;
		s[4][3][14]=5;
		s[4][3][15]=3;
		
		s[5][0][0]=12;
		s[5][0][1]=1;
		s[5][0][2]=10;
		s[5][0][3]=15;
		s[5][0][4]=9;
		s[5][0][5]=2;
		s[5][0][6]=6;
		s[5][0][7]=8;
		s[5][0][8]=0;
		s[5][0][9]=13;
		s[5][0][10]=3;
		s[5][0][11]=4;
		s[5][0][12]=14;
		s[5][0][13]=7;
		s[5][0][14]=5;
		s[5][0][15]=11;
		
		s[5][1][0]=10;
		s[5][1][1]=15;
		s[5][1][2]=4;
		s[5][1][3]=2;
		s[5][1][4]=7;
		s[5][1][5]=12;
		s[5][1][6]=9;
		s[5][1][7]=5;
		s[5][1][8]=6;
		s[5][1][9]=1;
		s[5][1][10]=13;
		s[5][1][11]=14;
		s[5][1][12]=0;
		s[5][1][13]=11;
		s[5][1][14]=3;
		s[5][1][15]=8;

		s[5][2][0]=9;
		s[5][2][1]=14;
		s[5][2][2]=15;
		s[5][2][3]=5;
		s[5][2][4]=2;
		s[5][2][5]=8;
		s[5][2][6]=12;
		s[5][2][7]=3;
		s[5][2][8]=7;
		s[5][2][9]=0;
		s[5][2][10]=4;
		s[5][2][11]=10;
		s[5][2][12]=1;
		s[5][2][13]=13;
		s[5][2][14]=11;
		s[5][2][15]=6;
		
		s[5][3][0]=4;
		s[5][3][1]=3;
		s[5][3][2]=2;
		s[5][3][3]=12;
		s[5][3][4]=9;
		s[5][3][5]=5;
		s[5][3][6]=15;
		s[5][3][7]=10;
		s[5][3][8]=11;
		s[5][3][9]=14;
		s[5][3][10]=1;
		s[5][3][11]=7;
		s[5][3][12]=6;
		s[5][3][13]=0;
		s[5][3][14]=8;
		s[5][3][15]=13;
		
		s[6][0][0]=4;
		s[6][0][1]=11;
		s[6][0][2]=2;
		s[6][0][3]=14;
		s[6][0][4]=15;
		s[6][0][5]=0;
		s[6][0][6]=8;
		s[6][0][7]=13;
		s[6][0][8]=3;
		s[6][0][9]=12;
		s[6][0][10]=9;
		s[6][0][11]=7;
		s[6][0][12]=5;
		s[6][0][13]=10;
		s[6][0][14]=6;
		s[6][0][15]=1;
		
		s[6][1][0]=13;
		s[6][1][1]=0;
		s[6][1][2]=11;
		s[6][1][3]=7;
		s[6][1][4]=4;
		s[6][1][5]=9;
		s[6][1][6]=1;
		s[6][1][7]=10;
		s[6][1][8]=14;
		s[6][1][9]=3;
		s[6][1][10]=5;
		s[6][1][11]=12;
		s[6][1][12]=2;
		s[6][1][13]=15;
		s[6][1][14]=8;
		s[6][1][15]=6;

		s[6][2][0]=1;
		s[6][2][1]=4;
		s[6][2][2]=11;
		s[6][2][3]=13;
		s[6][2][4]=12;
		s[6][2][5]=3;
		s[6][2][6]=7;
		s[6][2][7]=14;
		s[6][2][8]=10;
		s[6][2][9]=15;
		s[6][2][10]=6;
		s[6][2][11]=8;
		s[6][2][12]=0;
		s[6][2][13]=5;
		s[6][2][14]=9;
		s[6][2][15]=2;
		
		s[6][3][0]=6;
		s[6][3][1]=11;
		s[6][3][2]=13;
		s[6][3][3]=8;
		s[6][3][4]=1;
		s[6][3][5]=4;
		s[6][3][6]=10;
		s[6][3][7]=7;
		s[6][3][8]=9;
		s[6][3][9]=5;
		s[6][3][10]=0;
		s[6][3][11]=15;
		s[6][3][12]=14;
		s[6][3][13]=2;
		s[6][3][14]=3;
		s[6][3][15]=12;

		s[7][0][0]=13;
		s[7][0][1]=2;
		s[7][0][2]=8;
		s[7][0][3]=4;
		s[7][0][4]=6;
		s[7][0][5]=15;
		s[7][0][6]=11;
		s[7][0][7]=1;
		s[7][0][8]=10;
		s[7][0][9]=9;
		s[7][0][10]=3;
		s[7][0][11]=14;
		s[7][0][12]=5;
		s[7][0][13]=0;
		s[7][0][14]=12;
		s[7][0][15]=7;
		
		s[7][1][0]=1;
		s[7][1][1]=15;
		s[7][1][2]=13;
		s[7][1][3]=8;
		s[7][1][4]=10;
		s[7][1][5]=3;
		s[7][1][6]=7;
		s[7][1][7]=4;
		s[7][1][8]=12;
		s[7][1][9]=5;
		s[7][1][10]=6;
		s[7][1][11]=11;
		s[7][1][12]=0;
		s[7][1][13]=14;
		s[7][1][14]=9;
		s[7][1][15]=2;

		s[7][2][0]=7;
		s[7][2][1]=11;
		s[7][2][2]=4;
		s[7][2][3]=1;
		s[7][2][4]=9;
		s[7][2][5]=12;
		s[7][2][6]=14;
		s[7][2][7]=2;
		s[7][2][8]=0;
		s[7][2][9]=6;
		s[7][2][10]=10;
		s[7][2][11]=13;
		s[7][2][12]=15;
		s[7][2][13]=3;
		s[7][2][14]=5;
		s[7][2][15]=8;
		
		s[7][3][0]=2;
		s[7][3][1]=1;
		s[7][3][2]=14;
		s[7][3][3]=7;
		s[7][3][4]=4;
		s[7][3][5]=10;
		s[7][3][6]=8;
		s[7][3][7]=13;
		s[7][3][8]=15;
		s[7][3][9]=12;
		s[7][3][10]=9;
		s[7][3][11]=0;
		s[7][3][12]=3;
		s[7][3][13]=5;
		s[7][3][14]=6;
		s[7][3][15]=11;
		
		int ans=s[i][r][c];
		return ans;
	}
	public String sbox(String v)
	{
		String temp="",ans="";
		int val,k=0;
		for(int i=0;i<v.length();i+=6)
		{
			//System.out.println("i "+i);
			temp="";
			temp+=v.charAt(i);
			temp+=v.charAt(i+5);
			//System.out.println("temp1 "+temp);
			int r=Integer.parseInt(temp,2);
			//System.out.println("r: "+r);
			temp="";
			temp+=v.charAt(i+1);
			temp+=v.charAt(i+2);
			temp+=v.charAt(i+3);
			temp+=v.charAt(i+4);
			//System.out.println("temp 2 : "+temp);
			int c=Integer.parseInt(temp,2);
			//System.out.println("c : "+c);
			val=sboxval(k,r,c);
			temp=Integer.toBinaryString(val);
			if(temp.length()!=4)
			{
				int len=4-temp.length();
				for(int loop=0;loop<len;loop++)
					ans+="0";
			}
			//System.out.println("temp3 : "+temp);
			ans+=temp;
			//System.out.println("Ans : "+ans);
			k+=1;
		}
		return ans;
	}
	public String pbox(String p)
	{
		String ans="";
		ans+=p.charAt(15);
		ans+=p.charAt(6);
		ans+=p.charAt(19);
		ans+=p.charAt(20);
		ans+=p.charAt(28);
		ans+=p.charAt(11);
		ans+=p.charAt(27);
		ans+=p.charAt(16);
		ans+=p.charAt(0);
		ans+=p.charAt(14);
		ans+=p.charAt(22);
		ans+=p.charAt(25);
		ans+=p.charAt(4);
		ans+=p.charAt(17);
		ans+=p.charAt(30);
		ans+=p.charAt(9);
		ans+=p.charAt(1);
		ans+=p.charAt(7);
		ans+=p.charAt(23);
		ans+=p.charAt(13);
		ans+=p.charAt(31);
		ans+=p.charAt(26);
		ans+=p.charAt(2);
		ans+=p.charAt(8);
		ans+=p.charAt(18);
		ans+=p.charAt(12);
		ans+=p.charAt(29);
		ans+=p.charAt(5);
		ans+=p.charAt(21);
		ans+=p.charAt(10);
		ans+=p.charAt(3);
		ans+=p.charAt(24);
		
		return ans;
	}
}